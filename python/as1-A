num = int(input("Enter a number: "))
original = num
digit_sum = 0

while num > 0:
    digit_sum += num % 10
    num //= 10

print(f"Sum of digits of {original} is {digit_sum}")





num = int(input("Enter a number: "))
original = num
power = len(str(num))
result = 0

while num > 0:
    digit = num % 10
    result += digit ** power
    num //= 10

if result == original:
    print(f"{original} is an Armstrong number.")
else:
    print(f"{original} is not an Armstrong number.")











n = input("Enter a number: ")
e = o = z = 0
for ch in n:
    d = int(ch)
    if d == 0:
        z += 1
    elif d % 2 == 0:
        e += 1
    else:
        o += 1
print("Even:", e)
print("Odd:", o)
print("Zero:", z)







b = input("Enter a binary number: ")
d = int(b, 2)
print("Decimal:", d)







n = int(input("Enter a number: "))
print("Ok" if 1 <= n <= 50 else "Out of range")





#prime
n = int(input("Enter a number: "))
for i in range(2, n+1):
    for j in range(2, int(i**0.5)+1):
        if i % j == 0:
            break
    else:
        print(i, end=' ')







num = int(input("Enter a number: "))
total = 0

for i in range(1, num):
    if num % i == 0:
        total += i

if total == num:
    print(f"{num} is a perfect number.")
else:
    print(f"{num} is not a perfect number.")









x = int(input("Enter base (X): "))
y = int(input("Enter power (Y): "))
result = x ** y
print(f"{x}^{y} = {result}")






num = int(input("Enter a number: "))
original = str(num)
reversed_num = original[::-1]

if original == reversed_num:
    print(f"{num} is a palindrome.")
else:
    print(f"{num} is not a palindrome.")


num = int(input("Enter a number: "))
last = num % 10
first = int(str(num)[0])
total = first + last
print(f"Sum of first and last digit of {num} is {total}")
